name: CI

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Test with environment variables
        run: echo $TAG_NAME - $RELEASE_NAME
        env:
          TAG_NAME: nightly-tag-${{ steps.date.outputs.date }}
          RELEASE_NAME: nightly-release-${{ steps.date.outputs.date }}
      - uses: actions/checkout@v2
        with:
          repository: 'yosyshq/fpga-nightly'
          ref: 'packages'
      - name: Add docker repository
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt -y update || echo "Fix the root cause" ;\
          sudo apt -y install \
              apt-transport-https \
              ca-certificates \
              curl \
              gnupg \
              lsb-release;\
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg; \
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      - name: Ubuntu dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt -y update || echo "Fix the root cause";\
          sudo apt -y install \
              git \
              subversion \
              python \
              python3
      - name: Pip depencencies
        run: pip install click
      - name: Build
        run: ./nightly.py build --arch=linux-x64 --target=dfu-util
      - uses: actions/upload-artifact@v2
        with:
          name: dfu-util
          path: _outputs/linux-x64/dfu-util/*.tgz 
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: True
          body: ""
          tag: fpga-nightly-${{ steps.date.outputs.date }}
          artifacts: "_outputs/linux-x64/dfu-util/*.tgz"
          token: ${{ secrets.GITHUB_TOKEN }}
